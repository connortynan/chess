#include <iostream>
#include <iomanip>
#include <random>

int main()
{
    std::mt19937_64 rng(2024); // Fixed seed for reproducibility

    std::cout << "#pragma once\n\n";
    std::cout << "#include \"chess/inttypes.hpp\"\n\n";
    std::cout << "// Generated by extra/zobrist_generator.cpp\n";
    std::cout << "// DO NOT EDIT THIS FILE MANUALLY\n";
    std::cout << "namespace chess {\nnamespace zobrist {\n\n";

    // Pieces
    std::cout << "constexpr u64 pieces[2][6][64] = {\n";
    for (int c = 0; c < 2; ++c)
    {
        std::cout << "  {\n";
        for (int pt = 0; pt < 6; ++pt)
        {
            std::cout << "    { ";
            for (int sq = 0; sq < 64; ++sq)
            {
                std::cout << "0x" << std::hex << rng() << "ULL";
                if (sq != 63)
                    std::cout << ", ";
            }
            std::cout << " },\n";
        }
        std::cout << "  },\n";
    }
    std::cout << "};\n\n";

    // Castling rights
    std::cout << "constexpr u64 castling[16] = { ";
    for (int i = 0; i < 16; ++i)
    {
        std::cout << "0x" << std::hex << rng() << "ULL";
        if (i != 15)
            std::cout << ", ";
    }
    std::cout << " };\n\n";

    // En passant
    std::cout << "constexpr u64 ep[8] = { ";
    for (int i = 0; i < 8; ++i)
    {
        std::cout << "0x" << std::hex << rng() << "ULL";
        if (i != 7)
            std::cout << ", ";
    }
    std::cout << " };\n\n";

    // Turn
    std::cout << "constexpr u64 turn = 0x" << std::hex << rng() << "ULL;\n\n";

    std::cout << "} // namespace zobrist\n} // namespace chess\n";

    return 0;
}
